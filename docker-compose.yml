version: '3.9'
services:

  postgres:
    image: postgres:13
    container_name: postgres
    env_file:
      - .env
    expose:
      - "5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./db_init.sql:/docker-entrypoint-initdb.d/db_init.sql
      - ./database:/var/lib/postgresql/data

  postgres_auth:
    image: postgres:13
    container_name: postgres_auth
    env_file:
      - auth.env
    expose:
      - "5433"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${AUTH_POSTGRES_USER} -d ${AUTH_POSTGRES_DB} -p ${AUTH_POSTGRES_PORT}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./auth_database:/var/lib/postgresql/data
    command: -p 5433

  django:
    container_name: django
    build: ./app
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "curl --silent ${ALLOWED_HOSTS}:${DJANGO_PORT} >/dev/null || exit 1" ]
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy
    expose:
      - "8000"
    volumes:
      - ./app/static:/opt/app/static:rw

  nginx:
    container_name: nginx
    image: nginx:1.23.2
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/config:/etc/nginx/conf.d:ro
      - ./app/static:/data/static:ro
    depends_on:
      django:
        condition: service_healthy
      fastapi:
        condition: service_healthy
    ports:
      - "80:80"

  elastic:
    container_name: elastic
    image: elasticsearch:7.17.8
    environment:
      - discovery.type=single-node
    #    volumes:
    #      - ./elasticsearch-data:/usr/share/elasticsearch/data
    healthcheck:
      test: [ "CMD-SHELL", "curl --silent ${ES_URL}  >/dev/null || exit 1" ]
      interval: 10s
      timeout: 10s
      retries: 10
    expose:
      - "9200"

  etl:
    container_name: etl
    build: ./postgres_to_es
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      elastic:
        condition: service_healthy

  sqlite_to_pg:
    container_name: sqlite_to_pg
    build: ./sqlite_to_postgres
    depends_on:
      postgres:
        condition: service_healthy
      django:
        condition: service_healthy
    volumes:
      - ./.env:/opt/sqlite_to_postgres/.env:ro

  redis:
    image: redis:7.0.8
    expose:
      - "6379"

  redis_auth:
    image: redis:7.0.8
    expose:
     - "6380"
    command: --port 6380

  fastapi:
    container_name: fastapi
    build: ./fastapi-solution
    healthcheck:
      test: [ "CMD-SHELL", "curl --silent ${FASTAPI_HOST}:${FASTAPI_PORT}  >/dev/null || exit 1" ]
      interval: 10s
      timeout: 10s
      retries: 10
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      elastic:
        condition: service_healthy
      redis:
        condition: service_started
    expose:
      - "80"
    
  flask_auth:
    container_name: flask_auth
    build: ./auth-solution
    healthcheck:
      test: [ "CMD-SHELL", "curl --silent ${FLASK_HOST}:${FLASK_PORT} >/dev/null || exit 1" ]
      interval: 10s
      timeout: 10s
      retries: 10
    env_file:
      - .env
    depends_on:
      postgres_auth:
        condition: service_healthy
      redis_auth:
        condition: service_started
    expose:
      - "5000"
volumes:
  database:
  auth_database:
  static_volume:
  elasticsearch-data:
    driver: local