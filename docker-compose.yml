version: '3.9'
services:

  postgres:
    image: postgres:13
    container_name: postgres
    env_file:
      - .env
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./db_init.sql:/docker-entrypoint-initdb.d/db_init.sql
      - ./database:/var/lib/postgresql/data

  django:
    container_name: django
    build: ./app
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      elastic:
        condition: service_healthy

  sqlite_to_pg:
    container_name: sqlite_to_pg
    build: ./sqlite_to_postgres
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./.env:/opt/sqlite_to_postgres/.env:ro

  redis:
    image: redis:7.0.8
    ports:
      - "6379:6379"

  fastapi:
    container_name: fastapi
    build: ./fastapi-solution
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      elastic:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8001:8001"

volumes:
  database:
  static_volume:
  elasticsearch-data:
    driver: local